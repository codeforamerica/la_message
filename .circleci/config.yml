---

version: 2.1

executors:
  rails_executor:
    working_directory: ~/project
    docker:
      - image: circleci/ruby:2.6.3-node-browsers
        environment:
          BUNDLE_JOBS: 4
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: localhost
          PGUSER: la_message
          RAILS_ENV: test
      - image: circleci/postgres:10-postgis
        environment:
          POSTGRES_USER: la_message
          POSTGRES_DB: la_message_test
          POSTGRES_PASSWORD: ""

commands:
  setup_bundler:
    description: "Set Bundler dependencies"
    steps:
      - run: gem install bundler -v $(grep -A 1 "BUNDLED WITH" Gemfile.lock | tail -1 | tr -d " ")
      - restore_cache:
          keys:
            - v1-bundler-{{ arch }}-{{ checksum "Gemfile.lock" }}
            - v1-bundler-{{ arch }}-
      - run: bundle install --frozen && bundle clean
      - save_cache:
          key: v1-bundler-{{ arch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - ~/.bundle
            - ./vendor/bundle

  wait_for_database:
    description: "Wait for database to become available"
    steps:
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m

jobs:
  install_dependencies:
    executor: rails_executor
    steps:
      - checkout
      - setup_bundler

  build:
    executor: rails_executor
    steps:
      - checkout
      - setup_bundler
      - wait_for_database
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: bundle exec rake db:test:prepare
      - run: bin/rails assets:precompile
      - run: mkdir ~/rspec
      - run: bundle exec rspec --format documentation --format RspecJunitFormatter -o ~/rspec/rspec.xml
      - store_test_results:
          path: ~/rspec
      - store_artifacts:
          path: tmp/screenshots
          destination: screenshots

  lint:
    executor: rails_executor
    steps:
      - checkout
      - setup_bundler
      - run: bin/lint

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - install_dependencies
      - build:
          requires:
            - install_dependencies
      - lint:
          requires:
            - install_dependencies
